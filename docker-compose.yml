services:
  library_api:
    build:
      dockerfile: Library.Api/Dockerfile
    container_name: "library_api"
    env_file: .env
    ports:
      - "5253:8080"
      - "5254:8081"
  
  library_auth:
    build:
      dockerfile: Library.Auth/Dockerfile
    container_name: "library_auth"
    env_file: .env
    ports:
      - "5202:8080"
      - '5203:8081'
  
  library_notification:
    build:
      dockerfile: Library.Notification/Dockerfile
    container_name: "library_notification"
    env_file: .env
    ports:
      - "5124:8080"
      - '7115:8081'
  
  library_db:
    image: postgres:latest
    container_name: "library_db"
    env_file: .env
    ports:
      - "5432:5432"
    extra_hosts:
      - "database:172.17.0.1"
    volumes:
      - "db_data:/var/lib/postgresql/data"

  library_redis:
    image: "redis:latest"
    container_name: "library_redis"
    ports:
      - "6379:6379"
    hostname: redis
    volumes:
      - "redis_data:/data"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  library_zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: library_zookeeper
    env_file: .env
    ports:
      - "2181:2181"

  library_kafka:
    image: confluentinc/cp-kafka:latest
    container_name: library_kafka
    depends_on:
      - library_zookeeper
    env_file: .env
    ports:
      - "9092:9092"
    expose:
      - '29092'

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - library_kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server library_kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server library_kafka:29092 --create --if-not-exists --topic notificationTopic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server library_kafka:29092 --list
      "
  
  nginx:
    image: nginx:alpine
    container_name: "library_nginx"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"

volumes:
  db_data:
  redis_data:
    driver: local
  
  
  #  docker exec library_kafka kafka-topics --bootstrap-server library_kafka:9092   --create --topic notificationTopic
  
