services:
  library_api:
    build:
      dockerfile: Library.Api/Dockerfile
    container_name: "library_api"
    ports:
      - "5253:80"
    environment:
      CONNECTION_STRING_DOCKER: "host=db;;Database=LibraryDB;Port=5432;Username=postgres;Password=admin"
      CONNECTION_STRING_REDIS: "redis:6379"
      ASPNETCORE_ENVIRONMENT: "Development"
  library_auth:
    build:
      dockerfile: Library.Auth/Dockerfile
    container_name: "library_auth"
    ports:
      - "5253:8080"
    environment:
      CONNECTION_STRING_DOCKER: "host=db;;Database=LibraryDB;Port=5432;Username=postgres;Password=admin"
      CONNECTION_STRING_REDIS: "redis:6379"
      ASPNETCORE_ENVIRONMENT: "Development"
  db:
    image: postgres:latest
    container_name: "library_db"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "LibraryDB"
    extra_hosts:
      - "database:172.17.0.1"
    volumes:
      - "db_data:/var/lib/postgresql/data"
  redis:
    image: "redis:latest"
    container_name: "redis"
    ports:
      - "6379:6379"
    hostname: redis
    volumes:
      - "redis_data:/data"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

volumes:
  db_data:
  redis_data:
    driver: local
  
  #docker exec -it redis redis-cli
